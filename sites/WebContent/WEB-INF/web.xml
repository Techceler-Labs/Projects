<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	/WEB-INF/applicationContext-sites.xml
    </param-value>
  </context-param>

	<filter>
  		<filter-name>FavIconFilter</filter-name>
  		<filter-class>com.contento3.filter.FaviconFilter</filter-class>
  </filter>

  <!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
	<filter>
    	<filter-name>shiroFilter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
        	<param-name>targetFilterLifecycle</param-name>
        	<param-value>true</param-value>
    	</init-param>
	</filter>

	<!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
	<!-- requests.  Usually this filter mapping is defined first (before all others) to -->
	<!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
	<filter-mapping>
    	<filter-name>shiroFilter</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>

  <filter-mapping>
  		<filter-name>FavIconFilter</filter-name>
 		<url-pattern>/favicon.ico</url-pattern>
  </filter-mapping>

  

  <filter>
  	<filter-name>SiteDefaultPageFilter</filter-name>
  	<filter-class>com.contento3.filter.DefaultPageFilter</filter-class>
  </filter>

  <filter-mapping>
  		<filter-name>SiteDefaultPageFilter</filter-name>
 		<url-pattern>/</url-pattern>
  </filter-mapping>

<!-- 
  <filter>
  	<filter-name>SimplePageCachingFilter</filter-name>
  	<filter-class>com.contento3.caching.filter.CachingFilter</filter-class>
  </filter>

 
  <filter-mapping>
  		<filter-name>SimplePageCachingFilter</filter-name>
 		<url-pattern>/page/*</url-pattern>
  </filter-mapping>
 -->

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
    <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  
  
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>


</web-app>
