<beans 
  xmlns="http://www.springframework.org/schema/beans" 
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  ">

 <import resource="applicationContext-site-security.xml"/>

  <context:component-scan base-package="com.contento3.site.controller" />
  <mvc:annotation-driven/>

<bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	<property name="mappings">
		<value>
	  	 	/register/**/*=registrationController
	  	 	/register/*=registrationController
	  	 	/page/**/*=pageController  
 			/image/**/*=staticResourceController
			/js/**/*=staticResourceController
			/css/**/*=staticResourceController 
	  	 	/*=pageController  
		</value>
	</property>
</bean>

<mvc:interceptors>
	<mvc:interceptor>
		<mvc:mapping path="/"/>
		<mvc:mapping path="/**/*"/>
        <mvc:mapping path="/register/**/*"/>	<!-- At the moment, thymeleaf is only used for user registration controller not for page controller -->
        <bean class="com.contento3.site.filter.SiteInterceptor" >
        </bean>
    </mvc:interceptor>
</mvc:interceptors> 

<bean id="pageController" class="com.contento3.site.controller.PageController">
		<property name="pageService" ref="pageService" />
		<property name="siteService" ref="siteService" />
		<property name="templateEngine" ref="templateEngine" />
	</bean>
 
<bean id="registrationController" class="com.contento3.site.registration.UserRegistrationController">
	<property name="registrationService" ref="userRegistrationService" />
	<property name="templateService" ref="templateService" />
</bean>

<!-- This is used to return the javascript,css and images that are stored in the database and potentially stored on amazon s3  -->
<bean id="staticResourceController" class="com.contento3.site.controller.StaticResourceController">
	<property name="staticResourceViewResolver" ref="staticResourceView" />
</bean>

 <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:message" />
        <property name="defaultEncoding" value="UTF-8" />
 </bean>

<bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

<!-- 
<bean id="fmView" class="com.contento3.site.resolver.ExtendedFreemarkerView">
	<property name="freemarkerRenderingEngine" ref="fmRenderingEngine" />
	<property name="siteService" ref="siteService" />
	<property name="pageService" ref="pageService" />
	<property name="url" value="" />
</bean>

<bean id="fmRenderingEngine" class="com.contento3.site.template.render.engine.impl.FreemarkerRenderingEngine">
	<property name="customTemplateLoader" ref="fmTemplateLoader" />
	<property name="configuration" ref="fmConfiguration" />
	<property name="modelContext" ref="modelContext" />
</bean>


 -->
 
<bean id="staticResourceView" class="com.contento3.site.resolver.StaticResourceViewResolver">
	<property name="templateService" ref="templateService" />
	<property name="imageService" ref="imageService" />
	<property name="siteService" ref="siteService" />
</bean>

<!-- 
<bean id="pageAssemb" class="com.contento3.site.template.assembler.PageAssembler">
		<property name="pageService" ref="pageService" />
		<property name="pageTemplateService" ref="pageTemplateService" />
		<property name="templateService" ref="templateService" />
		<property name="htmlResolver" ref="htmlResolver" />
</bean>

<bean id="htmlResolver" class="com.contento3.site.page.section.resolver.impl.YuiHtmlResolver">
	<property name="templateService" ref="templateService" />
</bean>

 
<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
  <property name="freemarkerVariables">
    <map>
      <entry key="xml_escape" value-ref="fmXmlEscape"/>
    </map>
  </property>
  <property name="freemarkerSettings">
        <props>
            <prop key="auto_import">/spring.ftl as spring</prop>
        </props>
    </property>
</bean>


<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

<bean id="fmTemplateLoader" class="com.contento3.site.template.loader.FreemarkerTemplateLoader">
	<property name="pageAssembler" ref="pageAssemb" />
	<property name="templateService" ref="templateService" />
</bean>

<bean id="fmConfiguration" class="freemarker.template.Configuration"></bean>
-->
<bean id="modelContext" class="com.contento3.site.template.model.TemplateModelContext">
	<property name="models">
 		<list>
 			<ref bean="serviceMap" />
		</list>
    </property>
</bean>

<bean id="serviceMap" class="com.contento3.site.template.model.TemplateModelMapImpl">
  <property name="map">
      <map>
        <entry key="templateService" value-ref="templateService"/>
        <entry key="articleTemplateService" value-ref="articleTemplateService"/>
      </map>
  </property>
</bean>
  
</beans>
